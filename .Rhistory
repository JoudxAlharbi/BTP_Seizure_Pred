boxplot(dataset$GradRate~dataset$College)
boxplot(dataset$`%_grad_on_time`~dataset$College)
library(readxl)
sdintuition <- read_excel("D:/Datasets/sdintuition.xls")
View(sdintuition)
dataset = sdintuition
sapply(dataset,sd)
library(readxl)
drinking <- read_excel("D:/Datasets/drinking.xls")
View(drinking)
dataset = drinking
hist(drinking)
summary(drinking)
dataset = drinking
hist(dataset$Alcohol)
summary(drinking)
dataset = drinking
hist(dataset$Alcohol)
summary(drinking)
summary(dataset$Alcohol)
View(dataset)
dataset$Alcohol = factor(dataset$Alcohol,
levels = c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,'*')
labels = c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36, NaN)
)
dataset$Alcohol = factor(dataset$Alcohol,
levels = c('*'),
labels = c(NaN)
)
View(dataset)
dataset = drinking
dataset$Alcohol = factor(dataset$Alcohol,
levels = c(*),
labels = c(NaN)
)
dataset$Alcohol = factor(dataset$Alcohol,
levels = c('*'),
labels = c(NaN)
)
View(dataset)
dataset = drinking
View(dataset)
View(drinking)
library(readxl)
drinking <- read_excel("D:/Datasets/drinking.xls")
View(drinking)
dataset = drinking
hist(dataset$Alcohol)
summary(dataset$Alcohol)
A = [1,2,3
]
A = [1,2,3 ]
read.csv('F:\course\quiz1_data\hw1_data.csv')
read.csv('F:/course/quiz1_data/hw1_data.csv')
data = read.csv('F:/course/quiz1_data/hw1_data.csv')
View(data)
View(data)
data[1:2,]
data$Ozone[47]
is.na(data$Ozone)
is.na(data$Ozone)==TRUE
good = is.na(data$Ozone)
data[good]
data$Ozone[good]
good <- complete.cases(data)
data[good,]
data$Ozone[good,]
data$Ozone[good]
mean(data$Ozone[good])
data = data[good,]
a=data$Ozone>31
b=data$Temp>90
good <- complete.cases(a,b)
mean(data$Solar.R[good])
a <- data$Month==6
mean(data$Temp[a])
a <- data$Month==5
max(data$Ozone[a])
install.packages('swirl')
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",'F:/course')
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",'F:/course/data.csv')
data<- read.csv("data.csv")
data<- read.csv("F:/course/data.csv")
View(data)
good <- data$HINCP>1000000
data[good]
data[,good]
sum(good, na.rm = TRUE)
good <- data$FINCP>1000000
sum(good, na.rm = TRUE)
good <- data$VAL>1000000
sum(good, na.rm = TRUE)
good <- data$VAL>1000000
sum(good, na.rm = TRUE)
sum(good)
good
good <- data$VAL==24
sum(good)
sum(good,na.rm=TRUE)
install.packages(xlsx)
install.packages("xlsx")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx","F:/course/excel.xlsx")
library("xlsx")
library(xlsx)
library("xlsx")
read.xlsx("F:/course/excel.xlsx")
read.xlsx("F:/course/excel.xlsx",sheetIndex = 1)
18:23
c(18:23)
dat<-read.xlsx("F:/course/excel.xlsx",sheetIndex = 1,colIndex = c(7:15), rowIndex = c(18:23))
dat<-read.xlsx("F:/course/excel.xlsx",sheetIndex = 1,colIndex = c(7:15), rowIndex = c(18:23),mode = 'wb')
Sys.getenv("R_ARCH")
Sys.getenv("JAVA_HOME")
>download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",destfile = "F:/course/NGAP.xlsx",mode = "wb")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",destfile = "F:/course/NGAP.xlsx",mode = "wb")
dat <- read.xlsx("NGAP.xlsx",1,rowIndex = 18:23,colIndex = 7:15)
dat <- read.xlsx("F:/course/NGAP.xlsx",1,rowIndex = 18:23,colIndex = 7:15)
sum(dat$Zip*dat$Ext,na.rm=T)
install.packages("xml")
install.packages("XML")
DT <- fread(file = "F:/course/data2.csv", sep = ",")
install.packages("data.table")
library(data.table)
DT <- fread(file = "F:/course/data2.csv", sep = ",")
system.time()
system.time(DT[,mean(pwgtp15),by = SEX])
system.time(rowMeans(DT)[DT$SEX==1];rowMeans(DT)[DT$SEX==2])
system.time(rowMeans(DT)[DT$SEX==1])
system.time({rowMeans(DT)[DT$SEX==1];rowMeans(DT)[DT$SEX==2]})
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
tapply(DT$pwgtp15,DT$SEX,mean)
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time({mean(DT[DT$SEX==1,]$pwgtp15);mean(DT[DT$SEX==2,]$pwgtp15)})
system.time(mean(DT$pwgtp15,by = DT$SEX))
mean(DT$pwgtp15,by = DT$SEX)
DT[,mean(pwgtp15),by = SEX]
source("http://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
BiocManager::install(c("rhdf5"))
a
install.Rtools(GUI = TRUE,
page_with_download_url = "https://cran.r-project.org/bin/windows/Rtools/",
)
nstall.Rtools()
install.packages("installr")
install.Rtools()
library(installr)
install.Rtools()
R.version
library(installr)
pdateR()
updateR()
library(installr)
install.packages("installr")
library(installr)
R.version()
R.version()
R.Version()
library(installr)
install.Rtools()
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("rhdf5")
installed.packages()[, c("Package", "LibPath")]
library(BiocVersion)
library(BiocManager)
BiocManager::install("hdf5")
BiocManager::install("rhdf5")
library(rhdf5)
url<-url("https://purplewest.in/")
library(httr)
url <- GET("https://purplewest.in/")
c <- content(url, as = 'text')
library(XML)
p <- htmlParse(c,asText = TRUE)
p
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "a14948c232e37771a641",
secret = "d9dc7af114420112d668622d03e3825b4e9cfc05"
)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "a14948c232e37771a641",
secret = "d9dc7af114420112d668622d03e3825b4e9cfc05"
)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "a14948c232e37771a641",
secret = "d9dc7af114420112d668622d03e3825b4e9cfc05"
)
gtoken <- config(token = github_token)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
View(github_token)
myapp <- oauth_app("github",
key = "a14948c232e37771a641",
secret = "d9dc7af114420112d668622d03e3825b4e9cfc05"
)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "a14948c232e37771a641
",
secret = "d9dc7af114420112d668622d03e3825b4e9cfc05"
)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
cs <- read.csv("F:/course/data3.csv")
acs <- read.csv("F:/course/data3.csv")
acs <- read.csv("F:/course/data3.csv")
install.packages("sqldf")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select unique AGEP from acs")
sqldf("select distinct AGEP from acs")
library(httr)
GET("http://biostat.jhsph.edu/~jleek/contact.html")
GET("http://biostat.jhsph.edu/~jleek/contact.html" , c(10))
a <- GET("http://biostat.jhsph.edu/~jleek/contact.html")
content2<-content(a)
content2<-content(a,"text")
content2
content2[1]
library(XML)
p <- htmlTreeParse(content2)
p
p[10]
nchar(p)
nchar(p[20])
nchar(p[10])
nchar(p[100])
p[100]
p
p[,100]
View(p)
p[1]
p[2]
p[3]
p[3][10]
p<-p[3]
p[10]
p <- htmlTreeParse(content2)
capture.output(p)
p<-capture.output(p)
p[10]
p[100]
p <- htmlTreeParse(content2)
p<p[3]
p<-p[3]
p<-capture.output(p)
p[10]
nchar(p[10])
con<-url("http://biostat.jhsph.edu/~jleek/contact.html")
code<-readLines(con)
code[10]
nchar(code[10])
nchar(code[20])
nchar(code[30])
nchar(code[100])
install.packages("data.table")
library(data.table)
file<-read.fwf("F:/course/data4.for")
file<-read.fwf("F:/course/data4.for",10)
View(file)
file<-read.fwf("F:/course/data4.for",c(10,9))
read.fwf("F:/course/data4.for",1)
read.fwf("F:/course/data4.for",c(1,9))
data <- read.fwf("F:/course/data4.for",c(1,9))
View(data)
data <- read.table("F:/course/data4.for")
data <- read.table("F:/course/data4.for")
con <- url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
con2 <- content(con)
library(httr)
con2 <- content(con)
data <- read.fwf("F:/course/data4.for", 4, sep='-')
View(data)
data<- read.fwf("F:/course/data4.for", widths = c(-23,9))
View(data)
data[4]
data[-4:1]
data[-4:]
data[-4
data[-4]
s <- data[-4]
View(s)
s<-data[4:,:]
s<-data[c(4,1258):]
s<-data[c(4,1258):
]
s<-data[c(4,1258):1]
s<-data[c(4,1258)]
s<-data[c(4,1258),]
s
s<-data[c(5),]
s<-data[5:,]
s<-data[5:]
s<-data[5:1]
s<-data[5:0]
data<- read.fwf("F:/course/data4.for", widths = c(-23,9),skip=4)
View(data)
sum(data)
data <- read.csv("F:/course/data4.csv")
data$ACR
install.packages("dplyr")
library(dplyr)
agricultureLogical <- data$ACR == 3 && data$ACR == 6
agricultureLogical <- data[data$ACR == 3 && data$ACR == 6]
View(agricultureLogical)
View(data)
agricultureLogical <- data[data$ACR == 3 ]
agricultureLogical <- data[data$ACR == 3
agricultureLogical <- data[data$ACR == 3]
agricultureLogical <- data[data$ACR == 3]
agricultureLogical <- [data$ACR == 3]
agricultureLogical <- data$ACR == 3
agricultureLogical <- data$ACR == 3 & data$AGS == 6
which(agricultureLogical)
install.packages("jpeg")
library(jpeg)
pic <- readJPEG("F:/course/pic.jpg"
pic <- readJPEG("F:/course/pic.jpg")
pic <- readJPEG("F:/course/pic.jpg")
pic <- readJPEG("F:/course/pic.jpg",native = TRUE)
quantile(pic)
quantile(pic,30)
quantile(pic,0.25)
quantile(pic,0.30)
quantile(pic,0.80)
d1 <- read.csv("F:/course/data5.csv")
d2 <- read.csv("F:/course/data6.csv")
View(d1)
View(d2)
match(d1$X,d2$CountryCode)
count(match(d1$X,d2$CountryCode))
sum(is.na(match(d1$X,d2$CountryCode)))
arrange(df1,Gross.domestic.product.2012)
arrange(d1,Gross.domestic.product.2012)
d3 <- arrange(d1,Gross.domestic.product.2012)
View(d3)
d3 <- arrange(d1,desc(Gross.domestic.product.2012))
summarise(d1)
d1 <- read.csv("F:/course/data5.csv")
View(d1)
summarise(d1)
d1 <- read.csv("F:/course/data5.csv",header=TRUE)
View(d1)
d1 <- read.csv("F:/course/data5.csv",header=TRUE,skip = 3)
View(d1)
d1 <- read.csv("F:/course/data5.csv",header=TRUE,skip = 4)
d3 <- arrange(d1,desc(X.1))
View(d3)
sort(d1$X.1,decreasing = TRUE)
d3 <- sort(d1$X.1,decreasing = TRUE)
d3<-d1[order(d1$X.1)]
d1 <- read.csv("F:/course/data5.csv",header=TRUE,skip=3)
d3<-d1[order(d1$Ranking)]
d1[order(d1$Ranking)]
d1[order(d1$Ranking),]
d3 <- d1[order(d1$Ranking),]
View(d3)
d3 <- d1[order(-d1$Ranking),]
d3 <- d1[order(d1$Ranking,decreasing = TRUE),]
d3 <- group_by(d2,Income.Group)
View(d3)
View(d3)
group_by((d2, Income.Group))
group_by(d2, Income.Group)
d3 = merge(d1,d2,by.x = d1.X,by.y = d2.CountryCode)
d1.X
d1[0]
d1[0,:]
d1[0,]
d1[,0]
d1[,1]
d3 = merge(d1,d2,by.x = d1[,1],by.y = d2.CountryCode)
merge <- merge(d1, d2, by = 'CountryCode')
gdp <- fread("data5.csv", skip = 4, nrows = 190, select = c(1, 2, 4, 5), col.names = c("CountryCode", "Rank", "Economy", "Total"))
gdp <- read.csv("data5.csv", skip = 4, nrows = 190, select = c(1, 2, 4, 5), col.names = c("CountryCode", "Rank", "Economy", "Total"))
library(data.table)
gdp <- fread("data5.csv", skip = 4, nrows = 190, select = c(1, 2, 4, 5), col.names = c("CountryCode", "Rank", "Economy", "Total"))
gdp <- fread("F:/course/data5.csv", skip = 4, nrows = 190, select = c(1, 2, 4, 5), col.names = c("CountryCode", "Rank", "Economy", "Total"))
merge <- merge(gdp, d2, by = 'CountryCode')
tapply(merge$Rank, merge$`Income Group`, mean)
tapply(merge$Rank, merge$`Income Group`, mean)
View(merge)
d <- read.csv("F:/course/data7.csv")
l <- grep("WGTP",d.names,value = TRUE)
d.names()
d.names
d.name
d.values
d.values()
names(d)
l <- grep("WGTP",names(d),value = TRUE)
m<-strsplit(l,"wgtp")
m[123]
l <- grep("*WGTP*",names(d),value = TRUE)
n <- grep("*WGTP*",names(d),value = TRUE)
n <- grep("*[Ww][Gg][Tt][Pp]*",names(d),value = TRUE)
m<-strsplit(l,"wgtp")
m[123]
n
n <- grep("_*[Ww][Gg][Tt][Pp]_*",names(d),value = TRUE)
n <- grep(".*[Ww][Gg][Tt][Pp].*",names(d),value = TRUE)
n
n <- grep("[Ww][Gg][Tt][Pp]",names(d),value = TRUE)
names(d)
View(d)
varNamesSplit <- strsplit(names(d), "wgtp")
varNamesSplit[123]
d <- read.csv(F:/course/data6.csv)
d <- read.csv(F:/course/data6.csv)
d <- read.csv("F:/course/data6.csv")
View(d)
d <- read.csv("F:/course/data5.csv")
View(d)
d <- read.csv("F:/course/data5.csv", skip = 4, header = TRUE)
d <- read.csv("F:/course/data5.csv", skip = 4, header = TRUE, col.names = c("short","Rank"," 1","country","GDP"))
d <- read.csv("F:/course/data5.csv", skip = 4, col.names = c("short","Rank"," 1","country","GDP"))
d[,1]
d[5]
d1 <- (",","",d[5])
d1 <- sub(",","",d[5])
d1
mean(d1)
train <- read.table("F:/course/final_data/train/X_train.txt", sep = " " )
train <- read.table("F:/course/final_data/train/X_train.txt", sep = " " )
train <- read.table("F:/course/final_data/train/X_train.txt", sep = "" )
train <- read.table("F:/course/final_data/train/X_train.txt", sep = "",stringsAsFactors = F)
View(train)
data$V1
dat[1,]
train$V1
library(dplyr)
f <- read.table("F:/course/final_data/features.txt", sep = "", stringsAsFactors = F, col.names = cols)
f <- read.table("F:/course/final_data/features.txt", sep = "", stringsAsFactors = F)
View(f)
f <- read.table("F:/course/final_data/features.txt", col.names = c("n","functions"))
act <- read.table("F:/course/final_data/activity_labels.txt", col.names = c("code", "activity"))
s_test <- read.table("F:/course/final_data//test/subject_test.txt", col.names = "subject")
X_test <- read.table("F:/course/final_data//test/X_test.txt", col.names = features$functions)
y_test <- read.table("F:/course/final_data//test/y_test.txt", col.names = "code")
s_train <- read.table("F:/course/final_data//train/subject_train.txt", col.names = "subject")
X_train <- read.table("F:/course/final_data//train/X_train.txt", col.names = features$functions)
y_train <- read.table("F:/course/final_data//train/y_train.txt", col.names = "code")
f <- read.table("F:/course/final_data/features.txt", col.names = c("n","functions"))
act <- read.table("F:/course/final_data/activity_labels.txt", col.names = c("code", "activity"))
s_test <- read.table("F:/course/final_data//test/subject_test.txt", col.names = "subject")
X_test <- read.table("F:/course/final_data//test/X_test.txt", col.names = f$functions)
y_test <- read.table("F:/course/final_data//test/y_test.txt", col.names = "code")
s_train <- read.table("F:/course/final_data//train/subject_train.txt", col.names = "subject")
X_train <- read.table("F:/course/final_data//train/X_train.txt", col.names = f$functions)
y_train <- read.table("F:/course/final_data//train/y_train.txt", col.names = "code")
X <- rbind(X_train,X_test)
Y <- rbind(y_train,y_test)
S <- rbind(s_train, s_test)
M_Data <- cbind(S, Y, X)
M_S_Data <- M_Data %>% select(subject, code, contains("mean"), contains("std"))
M_S_Data$code <- act[M_S_Data$code, 2]
names(M_S_Data)[2] = "activity"
names(M_S_Data)<-gsub("Acc", "Accelerometer", names(M_S_Data))
names(M_S_Data)<-gsub("Gyro", "Gyroscope", names(M_S_Data))
names(M_S_Data)<-gsub("BodyBody", "Body", names(M_S_Data))
names(M_S_Data)<-gsub("Mag", "Magnitude", names(M_S_Data))
names(M_S_Data)<-gsub("^t", "Time", names(M_S_Data))
names(M_S_Data)<-gsub("^f", "Frequency", names(M_S_Data))
names(M_S_Data)<-gsub("tBody", "TimeBody", names(M_S_Data))
names(M_S_Data)<-gsub("-mean()", "Mean", names(M_S_Data), ignore.case = TRUE)
names(M_S_Data)<-gsub("-std()", "STD", names(M_S_Data), ignore.case = TRUE)
names(M_S_Data)<-gsub("-freq()", "Frequency", names(M_S_Data), ignore.case = TRUE)
names(M_S_Data)<-gsub("angle", "Angle", names(M_S_Data))
names(M_S_Data)<-gsub("gravity", "Gravity", names(M_S_Data))
Final_Tidy_Data <- M_S_Data %>%
group_by(subject, activity) %>%
summarise_all(funs(mean))
write.table(Final_Tidy_Data, "F:/course/final_data/Final_Tidy_Data.txt", row.name=FALSE)
library(Boruta)
library(callr)
library(data.table)
library(dplyr)
library(plyr)
library(pROC)
d <- read.csv('data_comp.csv')
d <- read.csv('data_comp.csv')
setwd("F:/PY/Pro/pro/BTP_Seizure_Pred")
d <- read.csv('data_comp.csv')
X2 <- d[,2:7]
y2 <- d[,8]
bor.results2 <- Boruta(X2,y2,maxRuns = 101,doTrace = 0)
plot(bor.results2,sort = FALSE)
